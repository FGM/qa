<?php
// $Id$
/**
 * @file
 * OSInet Quality Assurance module for Drupal: module installer
 *
 * @copyright Copyright (C) 2006-2011 Frederic G. MARAND for Ouest SystÃ¨mes Informatiques (OSInet)
 *
 * @since DRUPAL-4-7
 *
 * @license Licensed under the disjunction of the CeCILL, version 2 and General Public License version 2 and later
 *
 * License note: QA is distributed by OSInet to its customers under the
 * CeCILL 2.0 license. OSInet support services only apply to the module
 * when distributed by OSInet, not by any third-party further down the
 * distribution chain.
 *
 * If you obtained QA from drupal.org, that site received it under the
 * GPLv2 license and can therefore distribute it under the GPLv2, and
 * so can you and just anyone down the chain as long as the GPLv2 terms
 * are abided by, the module distributor in that case being the
 * drupal.org organization or the downstream distributor, not OSInet.
 */

/**
 * Implements hook_install().
 */
function qa_enable() {
  cache_clear_all('autoload:', 'cache'); // autoload 6.1
  cache_clear_all('autoload', 'cache');  // autoload 6.2
}

/**
 * Implements hook_uninstall().
 */
function qa_disable() {
  cache_clear_all('autoload:', 'cache'); // autoload 6.1
  cache_clear_all('autoload', 'cache');  // autoload 6.2
}

/**
 * Implements hook_requirements().
 */
function qa_requirements($phase) {
  // Ensure translations don't break at install time
  $t = get_t();

  $ret = array(
    'qa_autoload' => array(
      'title'       => $t('Autoload, for QA'),
    ),
  );

  // Test autoload schema. Autoload 6.1.x did not have the autoload_registry table
  $registry = drupal_get_schema('autoload_registry');
  if (empty($registry)) {
    $ret['qa_autoload'] += array(
      'value'       => $t('Registry not found'),
      'description' => $t('QA uses the autoload registry to obtain the list of classes implementing QA Controls without having to require implementation of an info hook by modules containing them. This registry was introduced in Autoload 6.2, but you are probably using version 6.1.x. Using hook_autoload_info() implementations as a fallback.'),
      'severity'    => REQUIREMENT_WARNING,
    );
  }
  else {
    $ret['qa_autoload'] += array(
      'value'       => $t('Registry found'),
      'severity'    => REQUIREMENT_OK,
    );
  }

  return $ret;
}
